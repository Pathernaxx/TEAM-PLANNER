<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.teamplanner.mapper.MemberMapper">
	<sql id="member">
		no, username, fullname, regdate, email, notification, iconpath
	</sql>
	
	<insert id="insertMember" parameterType="Member">
		INSERT INTO member(no, username, fullname, email, password)
		VALUES(member_sequence.nextVal, #{userName}, #{fullName}, #{email}, #{password})
	</insert>
	
	<select id="selectMemberByEmailCheck" parameterType="String" resultType="String">
		SELECT
			email
		FROM
			member
		WHERE
			email = #{email}
	</select>
	
	<select id="selectMemberByUserNameCheck" parameterType="String" resultType="String">
		SELECT
			username
		FROM
			member
		WHERE
			username = #{userName}
	</select>
	
	<select id="selectMeNotUserNameCheck" parameterType="hashMap" resultType="int">
		SELECT
			count(*)
		FROM
			member
		WHERE
			username = #{userName} AND no != #{memberNo}
	</select>
	
	<select id="selectMemberByMemberNo" parameterType="int">
		SELECT
			<include refid="member"/>
		FROM
			member
		WHERE
			no = #{memberNo}
	</select>
	
	<select id="selectMemberByNoAndPassByPasswordCheck" parameterType="hashMap" resultType="int">
		SELECT
			count(*)
		FROM
			member
		WHERE
			no = #{memberNo} AND password=#{password}
	</select>
	
	<update id="updateMemberName" parameterType="hashMap">
		UPDATE
			member
		SET
			username=#{userName}, fullname=#{fullName}
		WHERE
			no = #{no}
	</update>
	
	<update id="updateMemberNotification" parameterType="hashMap">
		UPDATE
			member
		SET
			notification = #{notification}
		WHERE
			no = #{no}
	</update>
	
	<update id="updateMemberIconPath" parameterType="hashMap">
		UPDATE
			member
		SET
			iconpath = #{iconpath}
		WHERE
			no = #{no}
	</update>
	
	<update id="updateMemberPassword" parameterType="hashMap">
		UPDATE
			member
		SET
			password = #{password}
		WHERE
			no = #{memberNo}
	</update>
	
	<select id="selectMemberByIdAndPasswordByEmail" parameterType="hashMap" resultType="Member">
		SELECT
			<include refid="member"/>
		FROM
			member
		WHERE
			email=#{email} AND password=#{password}
	</select>
	
	<select id="selectMemberByIdAndPasswordByName" parameterType="hashMap" resultType="Member">
		SELECT
			<include refid="member"/>
		FROM
			member
		WHERE
			username=#{name} AND password=#{password}
	</select>
	
	
	
	<select id="updateMemberView" parameterType="int" resultType="Member">
		SELECT
			<include refid="member"/>
		FROM
			member
		WHERE
			no = #{memberNo}
	</select>
	
	<update id="updateMember" parameterType="hashMap">
		UPDATE
			member
		SET
			username=#{userName}, fullname=#{fullName}
		WHERE
			no = #{no}
	</update>
	
	
	
	
	<select id="selectMemberbyMemberName" parameterType="hashMap" resultType="Member">
		select *
    	from member
    	where no not in
     		( select memberno
        		from memberlist
        		where myno = #{memberNo}
        	) and no != #{memberNo} and userName like #{text}||'%'
	</select>
	
	<select id="searchTagAllMember" parameterType="hashMap" resultType="Member">
		select distinct m.* 
		from member m , teamlist t 
		where m.no != #{memberNo} AND t.boardno != #{boardNo} AND m.username like #{key}||'%'
	</select>
</mapper>
